/*
 
 ▄████████    ▄████████  ▄██████▄   ▄████████    ▄█    █▄       ▄████████     ███     
███    ███   ███    ███ ███    ███ ███    ███   ███    ███     ███    ███ ▀█████████▄ 
███    █▀    ███    ███ ███    ███ ███    █▀    ███    ███     ███    █▀     ▀███▀▀██ 
███         ▄███▄▄▄▄██▀ ███    ███ ███         ▄███▄▄▄▄███▄▄  ▄███▄▄▄         ███   ▀ 
███        ▀▀███▀▀▀▀▀   ███    ███ ███        ▀▀███▀▀▀▀███▀  ▀▀███▀▀▀         ███     
███    █▄  ▀███████████ ███    ███ ███    █▄    ███    ███     ███    █▄      ███     
███    ███   ███    ███ ███    ███ ███    ███   ███    ███     ███    ███     ███     
████████▀    ███    ███  ▀██████▀  ████████▀    ███    █▀      ██████████    ▄████▀   
             ███    ███                                                               

    ███        ▄████████ ▀████    ▐████▀     ███     ███    █▄     ▄████████    ▄████████ 
▀█████████▄   ███    ███   ███▌   ████▀  ▀█████████▄ ███    ███   ███    ███   ███    ███ 
   ▀███▀▀██   ███    █▀     ███  ▐███       ▀███▀▀██ ███    ███   ███    ███   ███    █▀  
    ███   ▀  ▄███▄▄▄        ▀███▄███▀        ███   ▀ ███    ███  ▄███▄▄▄▄██▀  ▄███▄▄▄     
    ███     ▀▀███▀▀▀        ████▀██▄         ███     ███    ███ ▀▀███▀▀▀▀▀   ▀▀███▀▀▀     
    ███       ███    █▄    ▐███  ▀███        ███     ███    ███ ▀███████████   ███    █▄  
    ███       ███    ███  ▄███     ███▄      ███     ███    ███   ███    ███   ███    ███ 
   ▄████▀     ██████████ ████       ███▄    ▄████▀   ████████▀    ███    ███   ██████████ 
                                                                  ███    ███              

   ▄▄▄▄███▄▄▄▄      ▄████████ ███▄▄▄▄      ▄████████    ▄██████▄     ▄████████    ▄████████ 
 ▄██▀▀▀███▀▀▀██▄   ███    ███ ███▀▀▀██▄   ███    ███   ███    ███   ███    ███   ███    ███ 
 ███   ███   ███   ███    ███ ███   ███   ███    ███   ███    █▀    ███    █▀    ███    ███ 
 ███   ███   ███   ███    ███ ███   ███   ███    ███  ▄███         ▄███▄▄▄      ▄███▄▄▄▄██▀ 
 ███   ███   ███ ▀███████████ ███   ███ ▀███████████ ▀▀███ ████▄  ▀▀███▀▀▀     ▀▀███▀▀▀▀▀   
 ███   ███   ███   ███    ███ ███   ███   ███    ███   ███    ███   ███    █▄  ▀███████████ 
 ███   ███   ███   ███    ███ ███   ███   ███    ███   ███    ███   ███    ███   ███    ███ 
  ▀█   ███   █▀    ███    █▀   ▀█   █▀    ███    █▀    ████████▀    ██████████   ███    ███ 
                                                                                 ███    ███ 
----------------------------------------------------------------------------------------------

[+] This is a texture manager sub-system, which will be responsible to manage the lifetime of the texture-objects.

[+] This sub-system uses the singleton architecture and is optimized for the crochet engine.
------------------------------------------------------------------------------------------------
 */

#pragma once

#include "Texture.hpp"

namespace Crochet::Graphics {
  class TextureManager{
    public:
      static TextureManager& getInstance();
      Texture& getTexture(const std::string& name);
      void addTexture(const std::string& name,const std::string& path,const std::string& samplerName,int val,Shader& shader);  
  private:
      std::unordered_map<std::string,Texture> mTextures;

      TextureManager (const TextureManager&) = delete;
      TextureManager& operator=(const TextureManager&) = delete;
  };
}
